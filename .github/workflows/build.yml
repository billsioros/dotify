# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1
    - name: Install dependencies
      run: |
        pipenv install --deploy --dev
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Check if imports are incorrectly sorted and/or formatted.
      run: |
        pipenv run isort --check --diff --atomic dotify tests
    - name: Test with pytest
      env:
        SPOTIFY_ID: ${{ secrets.SPOTIFY_ID }}
        SPOTIFY_SECRET: ${{ secrets.SPOTIFY_SECRET }}
      run: |
        pipenv run pytest tests
    - name: Generate the coverage report
      env:
        SPOTIFY_ID: ${{ secrets.SPOTIFY_ID }}
        SPOTIFY_SECRET: ${{ secrets.SPOTIFY_SECRET }}
      run: |
        pipenv run pytest --cov=./ --cov-report=xml
    - name: Upload the coverage report to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        verbose: true
